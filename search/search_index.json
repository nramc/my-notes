{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome.!","text":"<p>The Ultimate Playbook for coding snippets, references, procedures and How-Tos based on real time experience.</p>"},{"location":"about.html","title":"About Us","text":"<ul> <li>This application contains information and reference which is being used for my reference</li> <li>Feel free to use it if needed</li> </ul>"},{"location":"development/local-development.html","title":"Local Development Essentials","text":""},{"location":"development/local-development.html#testing-e-mail-sending-feature","title":"Testing E-Mail Sending Feature","text":"<ul> <li>Mailpit is a small, fast, low memory, zero-dependency, multi-platform email testing   tool &amp; API for developers</li> <li>It acts as an SMTP server, provides a modern web interface to view &amp; test captured emails, and includes an API for   automated integration testing</li> <li>Docker with Springboot really useful for local development</li> <li>Rest API really helpful for integration testing</li> </ul>"},{"location":"development/local-development.html#testing-mongodb-documents","title":"Testing MongoDB documents","text":"<ul> <li>MongoDB docker image helps to run docker   container for local development</li> <li>MongoDB Express is one of the best tool to visualise MongoDB   content, and it's really helpful for local development to add/update/remove data from/to MongoDB</li> </ul>"},{"location":"development/validations.html","title":"Validation","text":""},{"location":"development/validations.html#phone-number-validation","title":"Phone Number Validation","text":"<ul> <li>Google provides an excellent library libphonenumber for mobile &amp; phone   number validation</li> <li>The library helps to format numbers based on geographical format</li> <li>The Library provides normalization feature to remove unwanted characters</li> <li>The Library has various distribution for many languages</li> </ul>"},{"location":"development/workstation-tools.html","title":"Developer Workstation Tools","text":"<p>Tools helps developer to improve productivity and simplify running application or services smoothly, conveniently.</p>"},{"location":"development/workstation-tools.html#useful-simple-git-configuration","title":"Useful simple Git configuration","text":"<ul> <li> <p>When you work with two or more different Git accounts and want to have different configuration for each account, you   can use conditional git configuration. For example, in my case I want to have my organisation account configurations   like company email address for internal organisation repositories and my personal email address for Open Source   repositories.</p> <pre><code># create dedciated git config for personal account in user home directory and define config.\n# in my case i want to use short name and personal email address for open source projects\ncat .gitconfig-github \n[user]\n  name = Ram\n  email = ramachandrannellai@gmail.com\n\n# configure the config in main .gitconfig conditionally\ncat .gitconfig\n# my organisation based config\n[user]\n  name = Ramachandran Nellaiyappan\n  email = ramachandran.nellaiyappan@mycompany.com\n\n[includeIf \"gitdir:~/Ram/github/\"]\n  path = .gitconfig-github\n</code></pre> </li> <li> <p>my favorite one line log format, it might help you as well</p> </li> </ul> <pre><code>  git config --global alias.onelog 'log --graph --decorate --pretty=\"%C(white) Hash: %h %C(red)Date: %ad %C(yellow) %C(blue) Author: %an %C(green)Message: %s \" --date=human'\n</code></pre> <ul> <li>one of my most frequently used git command</li> </ul> <pre><code>  git config --global alias.undo 'reset --soft HEAD~1'\n</code></pre>"},{"location":"development/workstation-tools.html#clean-as-you-code","title":"Clean as You Code","text":"<ul> <li>SonarLint Plugin for IDE: Detect bugs and code smells as early as   possible while you code</li> </ul>"},{"location":"development/workstation-tools.html#envfile-manage-environment-variables","title":"EnvFile: Manage Environment Variables","text":"<ul> <li>EnvFile allows you to set environment variables for your run   configurations from one or multiple files</li> <li>It supports YAML, JSON and .env formats</li> </ul>"},{"location":"development/workstation-tools.html#mkcert-local-trust-store-for-local-development","title":"mkcert: Local Trust store for Local Development","text":"<ul> <li>mkcert A simple zero-config tool to make locally trusted development   certificates with any names you'd like</li> <li>Using certificates from real certificate authorities(CAs) for development can be dangerous or impossible (for hosts   like example.test, localhost or 127.0.0.1), but self-signed certificates cause trust errors.</li> <li>Managing your own CA is the best solution, but usually involves arcane commands, specialized knowledge and manual   steps.</li> <li>mkcert automatically creates and installs a local CA in the system root   store, and generates locally-trusted certificates.</li> <li>mkcert does not automatically configure servers to use the   certificates, though, that's up to you.</li> </ul>"},{"location":"development/workstation-tools.html#design-and-document-your-feature","title":"Design and Document your feature","text":"<ul> <li>PlantUML IDE plugin helps us to write varies diagrams by writing code for documenting your   feature</li> </ul>"},{"location":"improvements/code-health-improvements.html","title":"Improve Code Health &amp; Reduce Technical Debt","text":""},{"location":"improvements/code-health-improvements.html#auto-upgrade-dependencies","title":"Auto upgrade dependencies","text":"<ul> <li>Use automated bot to update your project dependencies automatically in order to catch up with latest versions.</li> <li>Renovate provides easy integration and flexible if your organisation use   it. Documentation</li> <li>GitHub Dependent Bot if your repository exists in GitHub, you can use GitHub's   in-house dependent bot for auto updating dependencies.  </li> </ul>"},{"location":"improvements/documentation-improvements.html","title":"Documentation","text":""},{"location":"improvements/documentation-improvements.html#mkdocs-markdown-documentation","title":"MkDocs - Markdown Documentation","text":"<ul> <li>MkDocs helps us to write any documentation with Markdown   like technical concept, blog, etc.</li> <li>Material for MkDocs provides material theme for documentation</li> <li>Varies plugins available for adding graphs, UML, etc diagrams programmatically</li> </ul>"},{"location":"improvements/documentation-improvements.html#plantuml","title":"PlantUML","text":"<ul> <li>PlantUML helps us to write varies diagrams by writing code</li> <li>PlantUML IDE plugin really helpful for creating UML diagrams</li> </ul>"},{"location":"improvements/web-application-improvements.html","title":"Improvements for Web Application","text":""},{"location":"improvements/web-application-improvements.html#hotkeys-keyboard-shortcuts","title":"HotKeys - Keyboard Shortcuts","text":"<ul> <li>HotKeys improves user's UI/UX experience and boost productivity for   any Web   applications</li> <li>It is really helpful for web application like data entry websites and application having complex navigations</li> <li>One-line takeaways<ul> <li>Don\u2019t override native browser (or OS) shortcuts</li> <li>Support standard shortcuts that don\u2019t contradict the previous rule, and use one or two letter shortcuts for other   actions</li> <li>Always have a consistent system</li> <li>Pay maximum attention to discoverability</li> </ul> </li> <li>e.g. JIRA supporting HotKeys,</li> </ul>"},{"location":"java/email-templates.html","title":"Email Template","text":""},{"location":"java/email-templates.html#freemarker","title":"Freemarker","text":"<ul> <li>Freemarker is one of my favorite template engine for emails</li> <li>It provides rich features to manage complex logics using parent-child template formatting</li> <li>Online FreeMarker Template Tester is really helpful and handy to test your   templates</li> <li>IntelliJ Ultimate support developing freemarker   templates out of the box</li> </ul>"},{"location":"java/email-templates.html#thymeleaf","title":"Thymeleaf","text":"<ul> <li>Thymeleaf is really handy for simple and lightweight email   templates</li> <li>Thymeleaf and SpringMail is one of the best combination in my opinion</li> <li>IntelliJ Ultimate supports thymeleaf development out of the box</li> </ul>"},{"location":"java/email-templates.html#tip","title":"Tip","text":"<ul> <li>Mailpit is email &amp; SMTP testing tool with API, it is really helpful for local   development   to run local SMTP server and visualise using builtin UI and can also be used inn unit and integration testing with   builtin REST API.</li> <li>Implementation Reference: Journey-API </li> </ul>"},{"location":"java/java-notes.html","title":"Java Notes","text":""},{"location":"kubernetes/logs-verification.html","title":"Logs Verification","text":"<p>Login:</p> <pre><code>dexctl --user &lt;user-id&gt;\n</code></pre> <p>List all available contexts:</p> <pre><code>kubectl config get-contexts\n</code></pre> <p>Set current context to targeted one:</p> <pre><code>kubectl config use-context &lt;targeted context&gt;\n</code></pre>"},{"location":"kubernetes/logs-verification.html#logs-for-all-pods-deployment","title":"Logs for all pods / deployment","text":"<p>List deployments:</p> <pre><code>kubectl get deployments -n &lt;target namespace&gt;\n</code></pre> <p>List logs for all pods:</p> <pre><code>kubectl logs deployments/&lt;deployment name&gt;\n</code></pre>"},{"location":"kubernetes/logs-verification.html#logs-for-a-particular-pod","title":"Logs for a particular pod","text":"<p>List all pods:</p> <pre><code>kubectl get pods -n &lt;target namespace&gt;\n</code></pre> <p>List logs for a particular pod:</p> <pre><code>kubectl logs &lt;targted pod name&gt;\n</code></pre>"},{"location":"security/password-security.html","title":"Password Improvements","text":""},{"location":"security/password-security.html#prevent-using-weak-passwords","title":"Prevent using Weak Passwords","text":"<ul> <li>zxcvbn library helps to measure password strength in terms of score against   common   english words, common patterns &amp; sequences and even we can customize rule base with custom dictionaries</li> <li>Measure user's password strength and prevent user's to use password for which strength score less than allowed (e.g.   prevent score less 3 out of 5)</li> </ul>"},{"location":"security/password-security.html#prevent-using-leaked-passwords","title":"Prevent using Leaked Passwords","text":"<ul> <li>HaveIBeenPwned allows you to search across multiple data breaches to see if your email   address or phone number has been compromised.</li> <li>It supports REST API as well</li> <li>It has leaked password database and has secured way to compare passwords using hashing techniques</li> <li>Tip: Spring Security has HaveIBeenPwnedRestApiPasswordChecker API which helps application to securely connect to   the HaveIBeenPwned service  </li> </ul>"},{"location":"security/secure-coding.html","title":"Secure Coding","text":""},{"location":"security/secure-coding.html#clean-as-you-code","title":"Clean As You Code","text":"<ul> <li>SonarLint Plugin for IDE: Detect bugs and code smells as early as   possible while you code   You can even bind your organisation's quality gate rules if exists any</li> <li>SonarCloud does support Clean as You code   policy for your open source projects. It is free of cost for open source projects.</li> </ul>"},{"location":"security/secure-coding.html#xss-encode-for-client","title":"XSS: Encode for client","text":"<ul> <li> <p>OWASP Java Encoder helps to encode values based on client use case to   avoid any XSS attack</p> </li> <li> <p>Similar to html, dedicated methods available for CSS(<code>forCssString</code>) and JS (<code>forJavaScript</code>) as well</p> </li> <li>Similarly different encoding methods available for script/style   attribute(<code>forJavaScriptAttribute, forCssString-</code>), block (<code>forJavaScriptBlock</code>) and URL   components (<code>forCssUrl, forJavaScriptSource</code>) parameter   <pre><code>// when you want to place json properties inside &lt;script type=\"application/json\"&gt;${toJson()}&lt;/script&gt; in html\npublic String toJson() {\nObjectMapper objectMapper = new ObjectMapper();\ntry {\nreturn Encode.forHtmlContent(objectMapper.writeValueAsString(this));\n} catch (JsonProcessingException ex) {\nlog.error(\"Serialization error.\", ex);\n}\nreturn null;\n}\n</code></pre></li> </ul>"},{"location":"testings/automation-tips.html","title":"Automation Test Suite Tips","text":""},{"location":"testings/automation-tips.html#maven-failsafe-plugin","title":"maven-failsafe-plugin","text":"<ul> <li>maven-failsafe-plugin provides rich features for   integration and automation tests. If possible and suitable for your project case, use it</li> <li><code>rerunFailingTestsCount</code> is really useful feature to rerun failing tests at the end of the build   reference.</li> </ul>"},{"location":"testings/testing-tools.html","title":"Testing Tools","text":""},{"location":"testings/testing-tools.html#test-data-intellij-ide-plugin","title":"Test Data - IntelliJ IDE Plugin","text":"<ul> <li>Test Data can generate all sorts of randomized data including   Text, UUID, Numbers, Date &amp; Time, and Custom types such as popular ones like JSON, CSV, and SQL</li> <li>The plugin adds a context action 'Test Data' to generate data</li> </ul>"},{"location":"testings/testing-tools.html#restfultool-intellij-ide-plugin","title":"RestFulTool - IntelliJ IDE Plugin","text":"<ul> <li>RestFulTool offers a window to make REST API calls all from   IDE</li> <li>The plugin provides a bunch of tools for Restful Service development</li> <li>It has great integration support for Spring MVC and Spring Boot</li> </ul>"}]}